/*******************************************************************************
* タイトル:		メインプログラム
* プログラム名:	main.cpp
* 作成者:		GP11B132 16 竹内大翔
* 作成日:		2022/06/10
*******************************************************************************/

/*******************************************************************************
* scanf のwarning防止
*******************************************************************************/
#define _CRT_SECURE_NO_WARNINGS

/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "draw_tile.h"
#include "player.h"
#include "bullet.h"
#include "enemy.h"
#include "title.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/
//int g_Mode = GAME_MODE;		// 現在動作している状態（ゲームモード）

/*******************************************************************************
 関数名:	int main( void )
 引数　:	void
 戻り値:	正常終了: int型の 0
 説明　:	メイン関数
*******************************************************************************/
int main( void )
{
	Init();			// ゲーム全体の初期化処理

	// ゲームモードが終了じゃない間、永久に繰り返す
	while (GetMode() < GAME_END)
	{
		Update();	// ゲーム全体の更新処理

		Draw();		// ゲーム全体の描画処理
		Sleep(25);  //ちらつきの防止用
		
	}

	Uninit();		// ゲーム全体の終了処理

	return 0;
}

void Init(void) {
	title_Init(); 
	draw_tile_Init();
	player_Init();
	bullet_Init();
	enemy_Init();
	
}
void Uninit(void) {
}
void Update(void) {
	switch (GetMode()) {
	case GAME_TITLE:
		title_Update();
		break;

	case GAME_MODE:
		enemy_Update();
		bullet_Update();
		player_Update();
		draw_tile_Update();
		GM_Update();
		break;

	case GAME_RESULT:
		_getch();
	}
}
void Draw(void) {
	switch (GetMode()) {
	case GAME_TITLE:
		title_Draw();
		break;

	case GAME_MODE:
		player_Draw();
		bullet_Draw();
		enemy_Draw();
		draw_tile_Draw();
		break;
	
	case GAME_RESULT:
		break;
	}
}


